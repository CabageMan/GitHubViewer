# FRAGMENTS

# User Fragment
fragment UserFragment on User {
    name
    login
    avatarUrl
}

# Repository Fragment
fragment RepositoriesListFragment on Repository {
    id
    name
    createdAt
    resourcePath
    isPrivate
    isFork
    description
    primaryLanguage {
      name
      color
    }
}

# Repository Details Fragment
fragment RepositoryDetailsFragment on Repository {
    pushedAt
    url
    updatedAt
    forkCount
    parent {
      name
    }
    assignableUsers(first: 13) {
        nodes {
            ...UserFragment
        }
    }
}

# Review Request Fragment
fragment ReviewRequestListFragment on ReviewRequest {
    id
    pullRequest {
        headRefName
    }
    requestedReviewer {
        __typename
    }
}

# Commit List Fragment
fragment CommitListFragment on Commit {
    id
    message
}

# Pull Request Fragment
fragment PullRequestsListFragment on PullRequest {
    id
    state
    headRefName
    baseRefName
    title
    number
    createdAt
    mergedAt
    closedAt
    labels(first: 10){
        edges{
            node{
                color
                name
            }
        }
    }
    commits(first: 23) {
        edges {
            node {
                commit {
                    ...CommitListFragment
                }
            }
        }
    }

    author {
        login
    }
    reviewRequests {
        edges {
            node {
                ...ReviewRequestListFragment
            }
        }
    }
    assignees(first: 15) {
        edges {
            node {
                login
            }
        }
    }
    baseRepository {
        ...RepositoriesListFragment
    }
}


# QUERIES

# Get Own User
query OwnUser {
    viewer {
        ...UserFragment
    }
}



# Get User Repositories
query UserRepositories($userLogin: String!, $numberOfRepositories: Int!, $cursor: String, $order: RepositoryOrder) {
    user(login: $userLogin) {
        repositories(first: $numberOfRepositories after: $cursor orderBy: $order) {
            edges {
                node {
                    ...RepositoriesListFragment
                }
                cursor
            }
            totalCount
            pageInfo {
                endCursor
                hasNextPage
            }
        }
    }
}

# Get Repository Details
query RepositoryDetails($ownerLogin: String!, $repositoryName: String!) {
    repository(owner: $ownerLogin name: $repositoryName) {
        ...RepositoryDetailsFragment
    }
}

# Find RepositoryOrder
query FindRepository($ownerLogin: String!, $repositoryName: String!) {
    repository(owner: $ownerLogin name: $repositoryName) {
        ...RepositoriesListFragment
    }
}



# Get User Pull Requests
query UserPullRequests($userLogin: String!, $numberOfRequests: Int!, $cursor: String, $order: IssueOrder) {
    user(login: $userLogin) {
        pullRequests(first: $numberOfRequests after: $cursor orderBy: $order) {
            edges {
                node {
                    ...PullRequestsListFragment
                }
                cursor
            }
            totalCount
            pageInfo {
                endCursor
                hasNextPage
            }
        }
    }
}
